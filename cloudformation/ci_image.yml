Description: >
    This template deploys an AWS CodeBuild project that
    builds the docker container used for YP builds. It depends on the
    CI Network template.

Parameters:
  EnvironmentName:
    Description: >
        An environment name that is prefixed to resource names
    Type: String

  VPC:
    Description: >
        Please select the VPC ID that represents a CodeBuild ready VPC.
    Type: AWS::EC2::VPC::Id

  PrivateSubnet1:
    Description: >
        Please select the first private subnet.
    Type: AWS::EC2::Subnet::Id

  PrivateSubnet2:
    Description: >
        Please select the second private subnet.
    Type: AWS::EC2::Subnet::Id
      
  NoIngressSecurityGroup:
    Description: Select the no ingress security group (required)
    Type: AWS::EC2::SecurityGroup::Id

Resources:

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: no_artifacts
      BadgeEnabled: true
      Description: >
          The build process for creating an image and propagating to
          ECR for automated build processes.
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: IMAGE_REPO_NAME
            Value: yoctoproject/buildmachine
            Type: PLAINTEXT
          - Name: dockerhub_username
            Value: dh:username
            Type: SECRETS_MANAGER
          - Name: dockerhub_password
            Value: dh:password
            Type: SECRETS_MANAGER
      Name: !Join
        - ''
        - - !Ref EnvironmentName
          - "_YPBuildImage"
      ServiceRole: !Ref CodeBuildRole
      Source:
        BuildSpec: buildspec/ci_image.yml
        Location: https://github.com/aws/meta-aws-ci
        Type: GITHUB
        SourceIdentifier: meta_aws_ci
      SourceVersion: master
      VpcConfig:
        VpcId: !Ref VPC
        Subnets: [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]
        SecurityGroupIds: [ !Ref NoIngressSecurityGroup ]

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                Effect: Allow
                Resource: '*'
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:CompleteLayerUpload'
                - 'ecr:GetAuthorizationToken'
                - 'ecr:InitiateLayerUpload'
                - 'ecr:PutImage'
                - 'ecr:UploadLayerPart'
                Effect: Allow
                Resource: '*'
        - PolicyName: SecretManagerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'secretsmanager:GetSecretValue'
                Effect: Allow
                Resource: !Join
                  - ':'
                  - - 'arn:aws:secretsmanager'
                    - !Ref 'AWS::Region'
                    - !Ref 'AWS::AccountId'
                    - 'secret:/CodeBuild/*'
